plugins {
    id 'java-library'
    id 'maven-publish'
    id "jacoco"
    id "org.sonarqube" version "5.1.0.4882"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_9
    targetCompatibility = JavaVersion.VERSION_1_9
}

tasks.withType(JavaCompile).configureEach { // both compileJave & compileTestJava
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:-options"]
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.yaml:snakeyaml:1.14'
    compileOnly 'org.jetbrains:annotations:26.0.1'

    testRuntimeOnly 'org.yaml:snakeyaml:1.14'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.jetbrains:annotations:26.0.1'
}

test {
    useJUnitPlatform()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.name
            version = project.version
        }
    }
    repositories {
        mavenLocal()
    }
}

sonar {
    properties {
        property "sonar.projectKey", "AvarionMC_yaml"
        property "sonar.organization", "avarionmc"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}


test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = true
    }
}
